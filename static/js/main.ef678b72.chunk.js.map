{"version":3,"sources":["images/MysticalSpaceTyphoon.png","images/MirrorForce.png","images/DarkHole.png","images/Polymerization.png","images/MonsterReborn.png","images/Raigeki.png","images/TorrentialTribute.png","images/PotofGreed.png","images/SwordsofRevealingLight.png","images/MagicJammer.png","images/NegateAttack.png","images/CalloftheHaunted.png","images/GracefulCharity.png","cardDict.js","components/memoryCard.js","components/board.js","App.js","index.js"],"names":["cardDict","id","uniqid","cardName","cardLink","MysticalSpaceTyphoon","MirrorForce","DarkHole","Polymerization","MonsterReborn","Raigeki","TorrentialTribute","PotofGreed","SwordsofRevealingLight","MagicJammer","NegateAttack","CalloftheHaunted","GracefulCharity","MemoryCard","props","className","Card","onClick","handleCardSelect","Img","variant","src","Body","Title","CardRow","cards","Row","map","card","Board","numRows","Math","ceil","length","Container","Array","keys","rowNum","start","slice","App","useState","setCards","level","setLevel","curScore","setCurScore","numClicked","setNumClicked","bestScore","setBestScore","useEffect","newCards","sampleSize","clicked","event","targetId","currentTarget","filter","resetRound","cardsCopy","JSON","parse","stringify","i","j","floor","random","scrambleBoard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef678b72.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MysticalSpaceTyphoon.89fc842f.png\";","export default __webpack_public_path__ + \"static/media/MirrorForce.b8aed109.png\";","export default __webpack_public_path__ + \"static/media/DarkHole.1ef88622.png\";","export default __webpack_public_path__ + \"static/media/Polymerization.aaec7d4d.png\";","export default __webpack_public_path__ + \"static/media/MonsterReborn.7a4134d8.png\";","export default __webpack_public_path__ + \"static/media/Raigeki.19eb024e.png\";","export default __webpack_public_path__ + \"static/media/TorrentialTribute.2876f1e6.png\";","export default __webpack_public_path__ + \"static/media/PotofGreed.56aeca87.png\";","export default __webpack_public_path__ + \"static/media/SwordsofRevealingLight.3b233941.png\";","export default __webpack_public_path__ + \"static/media/MagicJammer.6f1614e8.png\";","export default __webpack_public_path__ + \"static/media/NegateAttack.11a5470c.png\";","export default __webpack_public_path__ + \"static/media/CalloftheHaunted.228bdd50.png\";","export default __webpack_public_path__ + \"static/media/GracefulCharity.7937d3d3.png\";","import uniqid from 'uniqid';\nimport MysticalSpaceTyphoon from './images/MysticalSpaceTyphoon.png';\nimport MirrorForce from './images/MirrorForce.png';\nimport DarkHole from './images/DarkHole.png';\nimport Polymerization from './images/Polymerization.png';\nimport MonsterReborn from './images/MonsterReborn.png';\nimport Raigeki from './images/Raigeki.png';\nimport TorrentialTribute from './images/TorrentialTribute.png';\nimport PotofGreed from './images/PotofGreed.png';\nimport SwordsofRevealingLight from './images/SwordsofRevealingLight.png';\nimport MagicJammer from './images/MagicJammer.png';\nimport NegateAttack from './images/NegateAttack.png';\nimport CalloftheHaunted from './images/CalloftheHaunted.png';\nimport GracefulCharity from './images/GracefulCharity.png';\n\nlet cardDict = [\n  {\n    id: uniqid(),\n    cardName: 'Mystical Space Typhoon',\n    cardLink: MysticalSpaceTyphoon,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Mirror Force',\n    cardLink: MirrorForce,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Dark Hole',\n    cardLink: DarkHole,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Polymerization',\n    cardLink: Polymerization,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Monster Reborn',\n    cardLink: MonsterReborn,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Raigeki',\n    cardLink: Raigeki,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Torrential Tribute',\n    cardLink: TorrentialTribute,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Pot of Greed',\n    cardLink: PotofGreed,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Swords of Revealing Light',\n    cardLink: SwordsofRevealingLight,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Magic Jammer',\n    cardLink: MagicJammer,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Negate Attack',\n    cardLink: NegateAttack,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Call of the Haunted',\n    cardLink: CalloftheHaunted,\n  },\n  {\n    id: uniqid(),\n    cardName: 'Graceful Charity',\n    cardLink: GracefulCharity,\n  },\n];\n\nexport default cardDict;\n","import Card from 'react-bootstrap/Card';\n\nfunction MemoryCard(props) {\n  return (\n    <div className=\"card-wrapper\">\n      <Card id={props.id} onClick={props.handleCardSelect}>\n        <Card.Img variant=\"top\" src={props.cardLink} />\n        <Card.Body>\n          <Card.Title>{props.cardName}</Card.Title>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default MemoryCard;\n","import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport MemoryCard from './memoryCard';\n\nconst NUM_CARDS_PER_ROW = 5;\n\nfunction CardRow(props) {\n  let cards = props.cards;\n  return (\n    <Row className={`row-cols-${NUM_CARDS_PER_ROW} justify-content-md-center`}>\n      {cards.map((card) => (\n        <MemoryCard\n          key={card.id}\n          {...card}\n          handleCardSelect={props.handleCardSelect}\n        />\n      ))}\n    </Row>\n  );\n}\n\nfunction Board(props) {\n  let cards = props.cards;\n  let numRows = Math.ceil(props.cards.length / NUM_CARDS_PER_ROW);\n\n  return (\n    <Container className=\"board\">\n      {[...Array(numRows).keys()].map((rowNum) => {\n        let start = rowNum * NUM_CARDS_PER_ROW;\n        return (\n          <CardRow\n            key={rowNum}\n            cards={cards.slice(start, start + NUM_CARDS_PER_ROW)}\n            handleCardSelect={props.handleCardSelect}\n          />\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default Board;\n","import { useEffect, useState } from 'react';\nimport sampleSize from 'lodash.samplesize';\nimport cardDict from './cardDict';\nimport Board from './components/board';\nimport './App.css';\n\nfunction App() {\n  let [cards, setCards] = useState([]);\n  let [level, setLevel] = useState(1);\n  let [curScore, setCurScore] = useState(0);\n  let [numClicked, setNumClicked] = useState(0);\n  let [bestScore, setBestScore] = useState(0);\n\n  const scrambleBoard = (cardsCopy = cards) => {\n    // shuffle cards using Durstenfeld shuffle\n    for (let i = cardsCopy.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [cardsCopy[i], cardsCopy[j]] = [cardsCopy[j], cardsCopy[i]];\n    }\n\n    setCards(cardsCopy);\n  };\n\n  // reset to level 1\n  // ran when user clicked on an image that they have seen\n  const resetRound = () => {\n    setLevel(1);\n    setCurScore(0);\n    setNumClicked(0);\n\n    let newCards = sampleSize(cardDict, level + 3);\n    newCards = newCards.map((card) => ({ ...card, clicked: false }));\n    setCards(newCards);\n  };\n\n  const handleCardSelect = (event) => {\n    let targetId = event.currentTarget.id;\n    let targetCard = cards.filter((card) => {\n      return card.id === targetId;\n    })[0];\n\n    if (targetCard.clicked) {\n      resetRound();\n    } else {\n      // set card to clicked\n      let cardsCopy = JSON.parse(JSON.stringify(cards));\n      cardsCopy = cardsCopy.map((card) =>\n        card.id === targetId ? { ...card, clicked: true } : card\n      );\n\n      setCurScore(curScore + 1);\n      setNumClicked(numClicked + 1);\n      scrambleBoard(cardsCopy);\n    }\n  };\n\n  useEffect(() => {\n    if (level > 10) {\n      setLevel(10);\n    }\n    let newCards = sampleSize(cardDict, level + 3);\n    newCards = newCards.map((card) => ({ ...card, clicked: false }));\n    setCards(newCards);\n    setNumClicked(0);\n  }, [level]);\n\n  useEffect(() => {\n    if (numClicked === level + 3) {\n      setLevel(level + 1);\n    }\n  }, [numClicked]);\n\n  useEffect(() => {\n    if (curScore > bestScore) {\n      setBestScore(curScore);\n    }\n  }, [curScore]);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">Memory Card Game</h1>\n      <p>\n        <em>Try to not select the same card twice in a level.</em>\n      </p>\n      <h2>Level {level}</h2>\n      <p>Current Score: {curScore}</p>\n      <p>Best Score: {bestScore}</p>\n      <Board cards={cards} handleCardSelect={handleCardSelect} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}